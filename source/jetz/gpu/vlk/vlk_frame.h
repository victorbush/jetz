/*=============================================================================
vlk_frame.h
=============================================================================*/

#pragma once

/*=============================================================================
INCLUDES
=============================================================================*/

#include <vulkan/vulkan.h>

#include "jetz/gpu/gpu_frame.h"

/*=============================================================================
NAMESPACE
=============================================================================*/

namespace jetz {

/*=============================================================================
TYPES
=============================================================================*/

enum class vlk_frame_status {
	INVALID,
	SWAPCHAIN_OUT_OF_DATE
};

class vlk_frame {

public:

	vlk_frame(uint8_t frame_idx);
	~vlk_frame();

	/*-----------------------------------------------------
	Public methods
	-----------------------------------------------------*/

	gpu_frame&						get_gpu_frame();
	uint8_t							get_frame_idx() const;

	/*-----------------------------------------------------
	Public variables
	-----------------------------------------------------*/
		
	VkCommandBuffer					cmd_buf;		/* command buffer */
	VkCommandBuffer					picker_cmd_buf;
	uint32_t						image_idx;
	double							delta_time;

private: 

	/*-----------------------------------------------------
	Private variables
	-----------------------------------------------------*/

	gpu_frame						_gpu_frame;
};

}   /* namespace jetz */
