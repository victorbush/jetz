/*=============================================================================
ecs.h
=============================================================================*/

#pragma once

/*=============================================================================
INCLUDES
=============================================================================*/

#include <unordered_map>

/*=============================================================================
NAMESPACE
=============================================================================*/

namespace jetz {

typedef int entity_id;

enum class component_type {
	transform,
	model
};

class ecs {

public:

	ecs();
	~ecs();

	/*-----------------------------------------------------
	Public Methods
	-----------------------------------------------------*/

	entity_id create_entity();
	void destory_entity(entity_id ent);

	create_component(entity_id ent, component_type comp);
	destroy_component();

private:

	/*-----------------------------------------------------
	Private variables
	-----------------------------------------------------*/

	std::unordered_map<entity, h

	/*-----------------------------------------------------
	Private methods
	-----------------------------------------------------*/

};

}   /* namespace jetz */
